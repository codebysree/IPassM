@page "/credential/read"
@rendermode InteractiveServer


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header text-white">
                    <span>
                        <h3 class="mb-0 float-start">Stored Credentialss</h3>
                        <a class="btn btn-pinky text-white float-end" href="/usercredentials/add">
                            <i class="bi bi-patch-plus"></i>
                            Add 
                        </a>
                    </span>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Website Name</th>
                                    <th>User Name</th>
                                    <th>Password</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var credential in credentials)
                                {
                                        <tr>
                                            <td>@credential.WebsiteName</td>
                                            <td>@credential.UserName</td>
                                            <td>@credential.Password</td>
                                            <td>
                                                <span title="Edit" @onclick="(e =>Edit(credential))"><i class="bi bi-pencil-square"></i></span>
                                                <span title="Delete" @onclick="Delete" ><i class="bi bi-trash3-fill"></i></span>
                                                <span title="Show"><i class="bi bi-binoculars-fill"></i></span>
                                            </td>
                                        </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Credential> credentials = new List<Credential>();

    protected override async Task OnInitializedAsync()
    {
        // Replace with your logic to fetch credentials from a database or file
        // This is just a sample data
        credentials = await FetchCredentials();
    }

    private void Delete()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task Edit(Credential credential)
    {
        NavigationManager.NavigateTo($"/usercredentials/edit/{credential.CredentialId}");
    }

    private async Task<List<Credential>> FetchCredentials()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal user = authState.User;
        IEnumerable<Claim> claims = user.Claims;
        string name = claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value;
        string guid = claims.FirstOrDefault(c => c.Type == "Id")?.Value;
        CsvService csvService = new(name, Guid.Parse(guid));
        return csvService.ViewEntries();
    }


}
