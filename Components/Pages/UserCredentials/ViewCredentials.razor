@page "/credential/view"
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthenticationStateProvider

@using IPassM.Components.Pages.UserCredentials.Components

@if (View == "Add" || View == "Edit")
{
    @* <AddCredentials onCancelButtonClicked="OnCancelButtonClicked"></AddCredentials> *@
    <CredForm CredentialId=@(CredentialId) Action="@View" onCancelButtonClicked="OnCancelButtonClicked"></CredForm>
}
else
{
    <CredView onAddButtonClicked="OnAddButtonClicked"></CredView>
}

@code {
    private string View { get; set; } = "View";

    private Guid? CredentialId { get; set; }


    private async Task OnAddButtonClicked(PassParam passParam)
    {
        await Task.Delay(0);
        View = passParam.action;
        CredentialId = passParam.credId;
    }

    private async Task OnEditButtonClicked()
    {
        await Task.Delay(0);
        View = "Edit";
    }

    private async Task OnCancelButtonClicked()
    {
        await Task.Delay(0);
        View = "View";
    }

    public record PassParam(string action, Guid? credId = null);
}