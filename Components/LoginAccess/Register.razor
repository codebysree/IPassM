@page "/Account/register"
@layout LoginLayout

<div class="login-box">
    <EditForm Model="Model" OnValidSubmit="HandleValidSubmit" FormName="Register-Form">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h1 class="text-center">Register</h1>
        <div class="form-group">
            <label for="email">Email ID</label>
            <InputText id="email" class="form-control" @bind-Value="Model.Email" />
            <ValidationMessage For="@(() => Model.Email)" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)" />
        </div>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="Model.Name" />
            <ValidationMessage For="@(() => Model.Name)" />
        </div>

        <div class="form-group">
            <label for="mobileNumber">Mobile Number</label>
            <InputText id="mobileNumber" class="form-control" @bind-Value="Model.MobileNumber" />
            <ValidationMessage For="@(() => Model.MobileNumber)" />
        </div>

        <button type="submit" class="btn btn-primary">Register</button>
        <span>@ErrorMessage</span>
        <a href="/Account/Login">Login</a>
    </EditForm>

</div>

@code {
    [SupplyParameterFromForm]
    public RegisterModel Model { get; set; }

    private string ErrorMessage = string.Empty;

    protected override void OnInitialized() => Model ??= new();

    private async Task HandleValidSubmit()
    {
        UserService userService = new();
        UserCredentials usrCred = await userService.FindUserAsync(Model.Email);

        if (usrCred is null)
        {
            await userService.AppendUserAsync(new UserCredentials
                {
                    Username = Model.Email,
                    Password = Model.Password,
                    Name = Model.Name
                });
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Username already exists. !!";
        }
    }

    public class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }

        [Required]
        [Phone]
        public string MobileNumber { get; set; }

        [Required]
        [MinLength(6)]
        public string Name { get; set; }
    }
}
